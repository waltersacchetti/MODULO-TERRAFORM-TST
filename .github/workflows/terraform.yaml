name : Deploy Terraform yo AWS

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        # env:
        # #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        # #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #     AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
        # #     AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: 1.7.4

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                # aws-profile: ${{ secrets.AWS_PROFILE }}
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}
               


            - name: Terraform Init
              run: terraform init

            - name: Terraform Plan
              id: plan
              run: terraform plan
              continue-on-error: true
            
            # - uses: actions/github-script@v6
            #   if: github.event_name == 'pull_request'
            #   env:
            #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
            # #   with:
            # #     github-token: ${{ secrets.GITHUB_TOKEN }}
            #     script: |
            #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #       <details><summary>Validation Output</summary>
            
            #       \`\`\`\n
            #       ${{ steps.validate.outputs.stdout }}
            #       \`\`\`
            
            #       </details>
            
            #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            #       <details><summary>Show Plan</summary>
            
            #       \`\`\`\n
            #       ${process.env.PLAN}
            #       \`\`\`
            
            #       </details>
            
            #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            #       github.rest.issues.createComment({
            #         issue_number: context.issue.number,
            #         owner: context.repo.owner,
            #         repo: context.repo.repo,
            #         body: output
            #       })  

            - name: Terraform Apply
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'  
              run: terraform apply -auto-approve

        
            